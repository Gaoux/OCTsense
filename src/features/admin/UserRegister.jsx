import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';

const UserRegister = () => {
  // Stats data - will be replaced by API call
  const [stats, setStats] = useState({
    totalUsers: 21,
    totalAdmins: 2,
    totalOphthalmologists: 19
  });

  const [formData, setFormData] = useState({
    name: '',
    email: '',
    profession: '',
    role: '',
    userId: '194120062210', // This would be generated by backend
    sendEmail: true
  });

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData({
      ...formData,
      [name]: type === 'checkbox' ? checked : value
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    // Example of API call (you can replace this with your actual backend call)
    console.log('Form submitted:', formData);
    
    // Example of API call:
    // try {
    //   await registerUser(formData);
    //   // Reset form or redirect
    // } catch (error) {
    //   console.error('Error registering user:', error);
    // }
  };

  // Load stats when component mounts
  useEffect(() => {
    // Replace with actual API call for stats
    // const fetchStats = async () => {
    //   try {
    //     const response = await getDashboardStats();
    //     setStats(response.data);
    //   } catch (error) {
    //     console.error('Error fetching stats:', error);
    //   }
    // };
    // fetchStats();
  }, []);

  return (
    <div className="min-h-screen bg-sky-400">
      {/* Header */}
      <header className="bg-sky-500 p-4 shadow-md flex justify-between items-center">
        <div className="flex items-center">
          <img src="/microscope-icon.png" alt="OCTsense" className="h-6 mr-2" />
          <h1 className="text-white text-xl font-semibold">OCTsense</h1>
        </div>
        <nav className="flex space-x-4">
          <Link to="/" className="text-white">Inicio</Link>
          <Link to="/usuarios" className="text-white">Usuarios</Link>
          <Link to="/registrar" className="text-white">Registrar</Link>
          <Link to="/usuarios" className="text-white">Editar</Link>
          <Link to="/profile" className="text-white">
            <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
              <path fillRule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clipRule="evenodd" />
            </svg>
          </Link>
        </nav>
      </header>

      <div className="container mx-auto p-4">
        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
          <div className="bg-sky-200 rounded-lg p-4 text-center">
            <h3 className="font-bold">Total Usuarios</h3>
            <p className="text-4xl font-bold">{stats.totalUsers}</p>
          </div>
          <div className="bg-sky-200 rounded-lg p-4 text-center">
            <h3 className="font-bold">Total Admin</h3>
            <p className="text-4xl font-bold">{stats.totalAdmins}</p>
          </div>
          <div className="bg-sky-200 rounded-lg p-4 text-center">
            <h3 className="font-bold">Total Oftalmólogos</h3>
            <p className="text-4xl font-bold">{stats.totalOphthalmologists}</p>
          </div>
        </div>

        {/* Registration Form */}
        <form onSubmit={handleSubmit} className="bg-sky-200 rounded-lg p-6 max-w-3xl mx-auto">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
            <div className="bg-sky-300 rounded p-4">
              <label className="block text-gray-700 mb-2">Usuario Deseado</label>
              <input 
                type="text" 
                name="username"
                className="w-full p-2 rounded" 
                placeholder="Nombre de usuario" 
                onChange={handleChange}
              />
            </div>
            <div className="bg-sky-300 rounded p-4">
              <label className="block text-gray-700 mb-2">Nombre</label>
              <input 
                type="text" 
                name="name"
                className="w-full p-2 rounded" 
                placeholder="Nombre completo" 
                onChange={handleChange}
              />
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
            <div className="bg-sky-300 rounded p-4">
              <label className="block text-gray-700 mb-2">Correo</label>
              <input 
                type="email" 
                name="email"
                className="w-full p-2 rounded" 
                placeholder="correo@ejemplo.com" 
                onChange={handleChange}
              />
            </div>
            <div className="bg-sky-300 rounded p-4">
              <label className="block text-gray-700 mb-2">Profesion</label>
              <input 
                type="text" 
                name="profession"
                className="w-full p-2 rounded" 
                placeholder="Oftalmólogo/a" 
                onChange={handleChange}
              />
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
            <div className="bg-sky-300 rounded p-4">
              <label className="block text-gray-700 mb-2">Rol</label>
              <input 
                type="text" 
                name="role"
                className="w-full p-2 rounded" 
                placeholder="Admin/Usuario" 
                onChange={handleChange}
              />
            </div>
            <div className="bg-sky-300 rounded p-4">
              <label className="block text-gray-700 mb-2">Id Asignado : {formData.userId}</label>
              {/* This is shown as non-editable in your design */}
              <input 
                type="text" 
                className="w-full p-2 rounded bg-gray-100" 
                value={formData.userId} 
                disabled 
              />
            </div>
          </div>

          <div className="flex items-center justify-between mt-6">
            <div className="flex items-center">
              <input 
                type="checkbox" 
                name="sendEmail"
                id="sendEmail" 
                className="mr-2" 
                checked={formData.sendEmail}
                onChange={handleChange}
              />
              <label htmlFor="sendEmail" className="text-sm">
                Al usuario se le enviará un correo donde tendrá que asignar una contraseña para su cuenta
              </label>
            </div>
            <button 
              type="submit"
              className="bg-red-400 text-white px-6 py-2 rounded"
            >
              Registrar
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default UserRegister;
